spring:
  application:
    name: short-link-project
#  config:
#    import: optional:classpath:application.yaml  # 确保当前模块配置优先
  datasource:
    # ShardingSphere 对 Driver 自定义，实现分库分表等隐藏逻辑
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    # ShardingSphere 配置文件路径
    url: jdbc:shardingsphere:classpath:shardingsphere-config.yaml
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      channel-topic:
        #自定义 Redis Stream 的配置
        short-link-statistic: 'short_link:statistic-stream'
        #Stream 类型的 key，作为生产者写入和消费者读取的消息通道。这个 Key 对应的 Value 类型是 Stream 类型的有序消息队列数据结构。
        #Redis 是一个 Key-Value 数据库，每个 Key 对应一个数据结构（String、List、Set、Hash、ZSet、Stream 等）；
        short-link-statistic-group: 'short_link:statistic-stream:only-group'
        #消费者组的名字，用于 Redis Stream 的消费组模型。

  mvc:
  #短链接跳转失败时的前端页面响应
    view:
      prefix: /templates/
      suffix: .html

  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848

server:
  port: 8001

#short-link:
#  statistic:
#    locale:
#      amap-key:824c511f0997586ea016f979fdb23087

short-link:
  domain:
    default: nurl.ink:8001
  goto-domain:
    white-list:
      enable: true
      names: '拿个offer,知乎,掘金,博客园'
      details:
        - nageoffer.com
        - zhihu.com
        - juejin.cn
        - cnblogs.com



mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



